class Solution {
public:
    bool isValid(vector<vector<char>>& board, int row, int col, char value){
        for(int i=0; i<9; i++){
            if(board[row][i]==value)
                return false;
            if(board[i][col]==value)
                return false;
            if(board[3*(row/3)+(i/3)][3*(col/3)+(i%3)]==value)
                return false;
        }
        return true;
    }
    bool isValidSudoku(vector<vector<char>>& board) {
        for(int i=0; i<9; i++){
            for(int j=0; j<9; j++){
                if(board[i][j]=='.')
                    continue;
                char value=board[i][j];
                //replacing value so that it doesn't check itself
                board[i][j]='.'; 
                if(!isValid(board,i,j, value))
                    return false;
                //backtrack
                board[i][j]=value;
            }
        }
        return true;
    }
};
